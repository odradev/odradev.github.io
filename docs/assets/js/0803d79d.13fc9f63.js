"use strict";(self.webpackChunkodra_website=self.webpackChunkodra_website||[]).push([[1616],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),i=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=i(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=i(n),m=r,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return n?a.createElement(f,l(l({ref:t},u),{},{components:n})):a.createElement(f,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var i=2;i<o;i++)l[i]=n[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294),r=n(86010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>w});var a=n(87462),r=n(67294),o=n(86010),l=n(12466),s=n(16550),c=n(91980),i=n(67392),u=n(50012);function d(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,i.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,c._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=p(e),[l,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[c,i]=f({queryString:n,groupId:a}),[d,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,u.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),b=(()=>{const e=c??d;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{b&&s(b)}),[b]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),i(e),h(e)}),[i,h,o]),tabValues:o}}var b=n(72389);const y="tabList__CuJ",g="tabItem_LNqP";function k(e){let{className:t,block:n,selectedValue:s,selectValue:c,tabValues:i}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.o5)(),p=e=>{const t=e.currentTarget,n=u.indexOf(t),a=i[n].value;a!==s&&(d(t),c(a))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},i.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:p},l,{className:(0,o.Z)("tabs__item",g,l?.className,{"tabs__item--active":s===t})}),n??t)})))}function _(e){let{lazy:t,children:n,selectedValue:a}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function v(e){const t=h(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",y)},r.createElement(k,(0,a.Z)({},e,t)),r.createElement(_,(0,a.Z)({},e,t)))}function w(e){const t=(0,b.Z)();return r.createElement(v,(0,a.Z)({key:String(t)},e))}},2693:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var a=n(87462),r=(n(67294),n(3905)),o=n(74866),l=n(85162);const s={sidebar_position:8},c="Using Proxy Caller",i={unversionedId:"tutorials/using-proxy-caller",id:"version-2.3.0/tutorials/using-proxy-caller",title:"Using Proxy Caller",description:"In this tutorial, we will learn how to use the proxycaller wasm to call an Odra payable function. The proxycaller is a session code that top-ups the cargo_purse passes it as an argument and then calls the contract. This is useful when you want to call a payable function attaching some CSPRs to the call.",source:"@site/versioned_docs/version-2.3.0/tutorials/using-proxy-caller.md",sourceDirName:"tutorials",slug:"/tutorials/using-proxy-caller",permalink:"/docs/2.3.0/tutorials/using-proxy-caller",draft:!1,tags:[],version:"2.3.0",lastUpdatedAt:1756362595,formattedLastUpdatedAt:"Aug 28, 2025",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Build, Deploy and Read the State of a Contract",permalink:"/docs/2.3.0/tutorials/build-deploy-read"},next:{title:"CEP-18",permalink:"/docs/2.3.0/tutorials/cep18"}},u={},d=[{value:"Contract",id:"contract",level:2},{value:"Client",id:"client",level:2},{value:"Conclusion",id:"conclusion",level:2}],p={toc:d};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"using-proxy-caller"},"Using Proxy Caller"),(0,r.kt)("p",null,"In this tutorial, we will learn how to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"proxy_caller")," wasm to call an Odra ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.3.0/backends/casper#payable"},"payable")," function. The ",(0,r.kt)("inlineCode",{parentName:"p"},"proxy_caller")," is a session code that top-ups the ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo_purse")," passes it as an argument and then calls the contract. This is useful when you want to call a payable function attaching some ",(0,r.kt)("inlineCode",{parentName:"p"},"CSPR"),"s to the call."),(0,r.kt)("p",null,"Read more about the ",(0,r.kt)("inlineCode",{parentName:"p"},"proxy_caller")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.3.0/backends/casper#using-proxy_callerwasm"},"here"),"."),(0,r.kt)("h2",{id:"contract"},"Contract"),(0,r.kt)("p",null,"For this tutorial, we will use the ",(0,r.kt)("inlineCode",{parentName:"p"},"TimeLockWallet")," contract from our examples."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust",metastring:"title=examples/src/contracts/tlw.rs showLineNumbers",title:"examples/src/contracts/tlw.rs",showLineNumbers:!0},"use odra::prelude::*;\nuse odra::casper_types::U512;\n\n#[odra::module(errors = Error, events = [Deposit, Withdrawal])]\npub struct TimeLockWallet {\n    balances: Mapping<Address, U512>,\n    lock_expiration_map: Mapping<Address, u64>,\n    lock_duration: Var<u64>\n}\n\n#[odra::module]\nimpl TimeLockWallet {\n    /// Initializes the contract with the lock duration.\n    pub fn init(&mut self, lock_duration: u64) {\n        self.lock_duration.set(lock_duration);\n    }\n\n    /// Deposits the tokens into the contract.\n    #[odra(payable)]\n    pub fn deposit(&mut self) {\n        // Extract values\n        let caller: Address = self.env().caller();\n        let amount: U512 = self.env().attached_value();\n        let current_block_time: u64 = self.env().get_block_time();\n\n        // Multiple lock check\n        if self.balances.get(&caller).is_some() {\n            self.env().revert(Error::CannotLockTwice)\n        }\n\n        // Update state, emit event\n        self.balances.set(&caller, amount);\n        self.lock_expiration_map\n            .set(&caller, current_block_time + self.lock_duration());\n        self.env().emit_event(Deposit {\n            address: caller,\n            amount\n        });\n    }\n\n    /// Withdraws the tokens from the contract.\n    pub fn withdraw(&mut self, amount: &U512) {\n        // code omitted for brevity\n    }\n\n    /// Returns the balance of the given account.\n    pub fn get_balance(&self, address: &Address) -> U512 {\n        // code omitted for brevity\n    }\n\n    /// Returns the lock duration.\n    pub fn lock_duration(&self) -> u64 {\n        // code omitted for brevity\n    }\n}\n\n/// Errors that may occur during the contract execution.\n#[odra::odra_error]\npub enum Error {\n    LockIsNotOver = 1,\n    CannotLockTwice = 2,\n    InsufficientBalance = 3\n}\n\n/// Deposit event.\n#[odra::event]\npub struct Deposit {\n    pub address: Address,\n    pub amount: U512\n}\n\n/// Withdrawal event.\n#[odra::event]\npub struct Withdrawal {\n    pub address: Address,\n    pub amount: U512\n}\n")),(0,r.kt)("p",null,"Full code can be found in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/odradev/odra/blob/release/2.2.0/examples/src/contracts/tlw.rs"},"our Github repo"),"."),(0,r.kt)("h2",{id:"client"},"Client"),(0,r.kt)("p",null,"Before we can interact with the node, we need to set it up. We will use the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/make-software/casper-nctl-docker"},(0,r.kt)("inlineCode",{parentName:"a"},"casper-nctl-docker"))," image."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm -it --name mynctl -d -p 11101:11101 -p 14101:14101 -p 18101:18101 makesoftware/casper-nctl\n")),(0,r.kt)("p",null,"Make sure you have the contract's wasm file and the secret key."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# Build the contract\ncargo odra build -c TimeLockWallet\n# Extract secret key\ndocker exec mynctl /bin/bash -c "cat /home/casper/casper-node/utils/nctl/assets/net-1/users/user-1/secret_key.pem" > your/path/secret_key.pem\n')),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("p",null,"To interact with the contract, we use the ",(0,r.kt)("inlineCode",{parentName:"p"},"livenet")," backend. It allows to write the code in the same manner as the test code, but it interacts with the live network (a local node in our case)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml",metastring:"title=Cargo.toml",title:"Cargo.toml"},'[package]\nname = "odra-examples"\nversion = "2.2.0"\nedition = "2021"\n\n[dependencies]\nodra = { path = "../odra", default-features = false }\n... # other dependencies\nodra-casper-livenet-env = { version = "2.2.0", optional = true }\n\n... # other sections\n\n[features]\ndefault = []\nlivenet = ["odra-casper-livenet-env"]\n\n... # other sections\n\n[[bin]]\nname = "tlw_on_livenet"\npath = "bin/tlw_on_livenet.rs"\nrequired-features = ["livenet"]\ntest = false\n\n... # other sections\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust",metastring:"title=examples/bin/tlw_on_livenet.rs showLineNumbers",title:"examples/bin/tlw_on_livenet.rs",showLineNumbers:!0},'//! Deploys an [odra_examples::contracts::tlw::TimeLockWallet] contract, then deposits and withdraw some CSPRs.\nuse odra::casper_types::{AsymmetricType, PublicKey, U512};\nuse odra::host::{Deployer, HostRef};\nuse odra::prelude::*;\nuse odra_examples::contracts::tlw::{TimeLockWallet, TimeLockWalletInitArgs};\n\nconst DEPOSIT: u64 = 100;\nconst WITHDRAWAL: u64 = 99;\nconst GAS: u64 = 20u64.pow(9);\n\nfn main() {\n    let env = odra_casper_livenet_env::env();\n    let caller = env.get_account(0);\n\n    env.set_caller(caller);\n    env.set_gas(GAS);\n\n    let mut contract = TimeLockWallet::deploy(\n        &env, \n        TimeLockWalletInitArgs { lock_duration: 60 * 60 }\n    );\n    // Send 100 CSPRs to the contract.\n    contract\n        .with_tokens(U512::from(DEPOSIT))\n        .deposit();\n    \n    println!("Caller\'s balance: {:?}", contract.get_balance(&caller));\n    // Withdraw 99 CSPRs from the contract.\n    contract.withdraw(&U512::from(WITHDRAWAL));\n    println!("Remaining balance: {:?}", contract.get_balance(&caller));\n}\n')),(0,r.kt)("p",null,"To run the code, execute the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'ODRA_CASPER_LIVENET_SECRET_KEY_PATH=path/to/secret_key.pem \\\nODRA_CASPER_LIVENET_NODE_ADDRESS=[NODE_ADDRESS] \\\nODRA_CASPER_LIVENET_CHAIN_NAME=casper-test \\\nODRA_CASPER_LIVENET_EVENTS_URL=[EVENTS_STREAM_ADDRESS] \\\ncargo run --bin tlw_on_livenet --features=livenet\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.09s\n     Running `../target/debug/tlw_on_livenet`\n\ud83d\udc81  INFO : Found wasm under "/Users/kpob/workspace/odra/examples/wasm/TimeLockWallet.wasm".\n\ud83d\udc81  INFO : Deploying "TimeLockWallet".\n\ud83d\ude44  WAIT : Waiting 10 for V1(TransactionV1Hash(5ab45ba29c9e7b9a91c4b5a5fbd2ba31735f03f99f94dce542d3584c8776ce8a)).\n\ud83d\ude44  WAIT : Waiting 10 for V1(TransactionV1Hash(5ab45ba29c9e7b9a91c4b5a5fbd2ba31735f03f99f94dce542d3584c8776ce8a)).\n\ud83d\udc81  INFO : Transaction "5ab45ba29c9e7b9a91c4b5a5fbd2ba31735f03f99f94dce542d3584c8776ce8a" successfully executed.\n\ud83d\udd17  LINK : https://testnet.cspr.live/transaction/5ab45ba29c9e7b9a91c4b5a5fbd2ba31735f03f99f94dce542d3584c8776ce8a\n\ud83d\udc81  INFO : Contract "contract-package-fe69f4dd63445cda6cdc3b4c066760227208a752857950af6bda8a41600781ea" deployed.\n\ud83d\udc81  INFO : Calling "contract-package-fe69f4dd63445cda6cdc3b4c066760227208a752857950af6bda8a41600781ea" with entrypoint "deposit" through proxy.\n\ud83d\ude44  WAIT : Waiting 10 for V1(TransactionV1Hash(86d07f72dc9383f46144b5fdfd912ddf15c7be539cf2c34e43f1214244da25b3)).\n\ud83d\udc81  INFO : Transaction "86d07f72dc9383f46144b5fdfd912ddf15c7be539cf2c34e43f1214244da25b3" successfully executed.\n\ud83d\udd17  LINK : https://testnet.cspr.live/transaction/86d07f72dc9383f46144b5fdfd912ddf15c7be539cf2c34e43f1214244da25b3\nOwner\'s balance: 100\n\ud83d\udc81  INFO : Calling "contract-package-fe69f4dd63445cda6cdc3b4c066760227208a752857950af6bda8a41600781ea" directly with entrypoint "withdraw".\n\ud83d\ude44  WAIT : Waiting 10 for V1(TransactionV1Hash(cbdedd1d5f528754904feb23a0e2087a53ed6f6ed27298367a98bc2accc5792f)).\n\ud83d\udc81  INFO : Transaction "cbdedd1d5f528754904feb23a0e2087a53ed6f6ed27298367a98bc2accc5792f" successfully executed.\n\ud83d\udd17  LINK : https://testnet.cspr.live/transaction/cbdedd1d5f528754904feb23a0e2087a53ed6f6ed27298367a98bc2accc5792f\nRemaining balance: 1\n')),(0,r.kt)("p",null,"As observed, the contract was successfully deployed, and the ",(0,r.kt)("inlineCode",{parentName:"p"},"Caller")," deposited tokens. Subsequently, the caller withdrew 99 CSPRs from the contract, leaving the contract's balance at 1 CSPR.\nThe logs display deploy hashes, the contract's hash, and even indicate if the call was made through the proxy, providing a comprehensive overview of the on-chain activity.")),(0,r.kt)(l.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("p",null,"Since TypeScript code often requires considerable boilerplate, we offer a streamlined version of the code. We demonstrate how to deploy the contract and prepare a deploy that utilizes the ",(0,r.kt)("inlineCode",{parentName:"p"},"proxy_caller")," to invoke a payable function with attached ",(0,r.kt)("inlineCode",{parentName:"p"},"CSPR")," tokens. The ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.3.0/tutorials/build-deploy-read"},"previous tutorial")," details how to read the state, which is not the focus of our current discussion."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=index.ts showLineNumbers",title:"index.ts",showLineNumbers:!0},'import {\n    CLByteArray,\n    CLList,\n    CLU8,\n    CLValueBuilder,\n    CasperClient,\n    Contracts,\n    Keys,\n    RuntimeArgs,\n    csprToMotes,\n    decodeBase16,\n} from "casper-js-sdk";\nimport fs from "fs";\n\nconst LOCAL_NODE_URL = "http://127.0.0.1:11101/rpc";\nconst SECRET_KEY_PATH = "keys/secret_key.pem"\nconst PROXY_CALLER_PATH = "wasm/proxy_caller.wasm"\nconst CONTRACT_PATH = "wasm/TimeLockWallet.wasm";\nconst CHAIN_NAME = "casper-net-1";\nconst ENTRY_POINT = "deposit";\nconst DEPOSIT = 100;\nconst GAS = 110;\n// Once the contract is deployed, the contract package hash\n// can be obtained from the global state.\nconst CONTRACT_PACKAGE_HASH = "...";\n\nconst casperClient = new CasperClient(LOCAL_NODE_URL);\nconst keypair = Keys.Ed25519.loadKeyPairFromPrivateFile(\n    SECRET_KEY_PATH\n);\nconst contract = new Contracts.Contract(casperClient);\n\nexport async function deploy_contract(): Promise<string> {\n    // Required odra_cfg args and the constructor args\n    const args = RuntimeArgs.fromMap({\n        odra_cfg_package_hash_key_name: CLValueBuilder.string("tlw"),\n        odra_cfg_allow_key_override: CLValueBuilder.bool(true),\n        odra_cfg_is_upgradable: CLValueBuilder.bool(true),\n        odra_cfg_is_upgrade: CLValueBuilder.bool(false),\n        lock_duration: CLValueBuilder.u64(60 * 60)\n    });\n    \n    const wasm = new Uint8Array(fs.readFileSync(CONTRACT_PATH));\n    const deploy = contract.install(\n        wasm,\n        args,\n        csprToMotes(GAS).toString(),\n        keypair.publicKey,\n        CHAIN_NAME,\n        [keypair],\n    );\n    return casperClient.putDeploy(deploy);\n}\n  \nexport async function deposit(): Promise<string> {\n    // Contract package hash is a 32-byte array, \n    // so take the hex string and convert it to a byte array.\n    // This is done using the decodeBase16 function from \n    // the casper-js-sdk.\n    const contractPackageHashBytes = new CLByteArray(\n        decodeBase16(CONTRACT_PACKAGE_HASH)\n    );\n    // Next, create RuntimeArgs for the deploy \n    // and pass them as bytes to the contract.\n    // Note that the args are not a byte array, but a CLList \n    // of CLU8s - a different type of CLValue.\n    // Finally, create a Uint8Array from the bytes and \n    // then transform it into a CLList<CLU8>.\n    const args_bytes: Uint8Array = RuntimeArgs.fromMap({})\n        .toBytes()\n        .unwrap();\n    const serialized_args = new CLList(\n        Array.from(args_bytes)\n            .map(value => new CLU8(value))\n    );\n\n    const args = RuntimeArgs.fromMap({\n        attached_value: CLValueBuilder.u512(DEPOSIT),\n        amount: CLValueBuilder.u512(DEPOSIT),\n        entry_point: CLValueBuilder.string(ENTRY_POINT),\n        contract_package_hash: contractPackageHashBytes,\n        args: serialized_args\n    });\n    // Use proxy_caller to send tokens to the contract.\n    const wasm = new Uint8Array(fs.readFileSync(PROXY_CALLER_PATH));\n    const deploy = contract.install(\n        wasm,\n        args,\n        csprToMotes(GAS).toString(),\n        keypair.publicKey,\n        CHAIN_NAME,\n        [keypair],\n    );\n    return casperClient.putDeploy(deploy);\n}\n  \ndeploy_contract()\n    .then((result) => { console.log(result); });\n\n// One you obatin the contract hash, you can call the deposit function:\n// deposit()\n//     .then((result) => { console.log(result); });\n')),(0,r.kt)("p",null,"To run the code, execute the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"tsc && node target/index.js \n# Sample output\nf40e3ca983034435d829462dd53d801df4e98013009cbf4a6654b3ee467063a1 # the deploy hash\n")))),(0,r.kt)("h2",{id:"conclusion"},"Conclusion"),(0,r.kt)("p",null,"In this tutorial, we learned how to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"proxy_caller")," wasm to make a payable function call. We deployed the ",(0,r.kt)("inlineCode",{parentName:"p"},"TimeLockWallet")," contract, deposited tokens using the ",(0,r.kt)("inlineCode",{parentName:"p"},"proxy_caller")," with attached CSPRs, and withdrew them. You got to try it out in both ",(0,r.kt)("inlineCode",{parentName:"p"},"Rust")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"TypeScript"),", so you can choose whichever you prefer. ",(0,r.kt)("inlineCode",{parentName:"p"},"Rust")," code seemed simpler, thanks to the Odra ",(0,r.kt)("inlineCode",{parentName:"p"},"livenet")," backend making chain interactions easier to handle."))}m.isMDXComponent=!0}}]);