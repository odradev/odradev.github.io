"use strict";(self.webpackChunkodra_website=self.webpackChunkodra_website||[]).push([[9548],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),d=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=d(e.components);return a.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=d(t),m=r,f=c["".concat(i,".").concat(m)]||c[m]||u[m]||o;return t?a.createElement(f,l(l({ref:n},p),{},{components:t})):a.createElement(f,l({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=c;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var d=2;d<o;d++)l[d]=t[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},17786:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var a=t(87462),r=(t(67294),t(3905));const o={sidebar_position:2},l="Using odra-modules",s={unversionedId:"examples/using-odra-modules",id:"version-2.0.1/examples/using-odra-modules",title:"Using odra-modules",description:"Besides the Odra framework, you can attach to your project odra-module - a set of plug-and-play modules.",source:"@site/versioned_docs/version-2.0.1/examples/using-odra-modules.md",sourceDirName:"examples",slug:"/examples/using-odra-modules",permalink:"/docs/2.0.1/examples/using-odra-modules",draft:!1,tags:[],version:"2.0.1",lastUpdatedAt:1752056444,formattedLastUpdatedAt:"Jul 9, 2025",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"odra-examples",permalink:"/docs/2.0.1/examples/odra-examples"},next:{title:"Tutorials",permalink:"/docs/2.0.1/category/tutorials"}},i={},d=[{value:"Available modules",id:"available-modules",level:2},{value:"Tokens",id:"tokens",level:3},{value:"CEP-18",id:"cep-18",level:4},{value:"CEP-95",id:"cep-95",level:4},{value:"Erc20",id:"erc20",level:4},{value:"Erc721",id:"erc721",level:4},{value:"Erc1155",id:"erc1155",level:4},{value:"Wrapped native token",id:"wrapped-native-token",level:4},{value:"Access",id:"access",level:3},{value:"AccessControl",id:"accesscontrol",level:4},{value:"Ownable",id:"ownable",level:4},{value:"Ownable2Step",id:"ownable2step",level:4},{value:"Security",id:"security",level:3},{value:"Pausable",id:"pausable",level:4}],p={toc:d};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"using-odra-modules"},"Using odra-modules"),(0,r.kt)("p",null,"Besides the Odra framework, you can attach to your project ",(0,r.kt)("inlineCode",{parentName:"p"},"odra-module")," - a set of plug-and-play modules."),(0,r.kt)("p",null,"If you followed the ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.0.1/getting-started/installation"},"Installation guide")," your Cargo.toml should look like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml",metastring:"title=Cargo.toml",title:"Cargo.toml"},'[package]\nname = "my_project"\nversion = "0.1.0"\nedition = "2021"\n\n[dependencies]\nodra = "2.0.1"\n\n[dev-dependencies]\nodra-test = "2.0.1"\n\n[build-dependencies]\nodra-build = "2.0.1"\n\n[[bin]]\nname = "my_project_build_contract"\npath = "bin/build_contract.rs"\ntest = false\n\n[[bin]]\nname = "my_project_build_schema"\npath = "bin/build_schema.rs"\ntest = false\n\n[profile.release]\ncodegen-units = 1\nlto = true\n\n[profile.dev.package."*"]\nopt-level = 3\n')),(0,r.kt)("p",null,"To use ",(0,r.kt)("inlineCode",{parentName:"p"},"odra-modules"),", edit your ",(0,r.kt)("inlineCode",{parentName:"p"},"dependency")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"features")," sections."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml",metastring:"title=Cargo.toml",title:"Cargo.toml"},'[dependencies]\nodra = "2.0.1"\nodra-modules = "2.0.1"\n')),(0,r.kt)("p",null,"Now, the only thing left is to add a module to your contract."),(0,r.kt)("p",null,"Let's write an example of ",(0,r.kt)("inlineCode",{parentName:"p"},"MyToken")," based on ",(0,r.kt)("inlineCode",{parentName:"p"},"Erc20")," module."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use odra::prelude::*;\nuse odra::casper_types::U256;\nuse odra_modules::erc20::Erc20;\n\n#[odra::module]\npub struct MyToken {\n    erc20: SubModule<Erc20>\n}\n\n#[odra::module]\nimpl OwnedToken {\n    pub fn init(&mut self, initial_supply: U256) {\n        let name = String::from("MyToken");\n        let symbol = String::from("MT");\n        let decimals = 9u8;\n        self.erc20.init(name, symbol, decimals, initial_supply);\n    }\n\n    pub fn name(&self) -> String {\n        self.erc20.name()\n    }\n\n    pub fn symbol(&self) -> String {\n        self.erc20.symbol()\n    }\n\n    pub fn decimals(&self) -> u8 {\n        self.erc20.decimals()\n    }\n\n    pub fn total_supply(&self) -> U256 {\n        self.erc20.total_supply()\n    }\n\n    pub fn balance_of(&self, address: Address) -> U256 {\n        self.erc20.balance_of(address)\n    }\n\n    pub fn allowance(&self, owner: Address, spender: Address) -> U256 {\n        self.erc20.allowance(owner, spender)\n    }\n\n    pub fn transfer(&mut self, recipient: Address, amount: U256) {\n        self.erc20.transfer(recipient, amount);\n    }\n\n    pub fn transfer_from(&mut self, owner: Address, recipient: Address, amount: U256) {\n        self.erc20.transfer_from(owner, recipient, amount);\n    }\n\n    pub fn approve(&mut self, spender: Address, amount: U256) {\n        self.erc20.approve(spender, amount);\n    }\n}\n')),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"All available modules are placed in the main ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/odradev/odra"},"Odra repository"),".")),(0,r.kt)("h2",{id:"available-modules"},"Available modules"),(0,r.kt)("p",null,"Odra modules comes with couple of ready-to-use modules and reusable extensions."),(0,r.kt)("h3",{id:"tokens"},"Tokens"),(0,r.kt)("h4",{id:"cep-18"},"CEP-18"),(0,r.kt)("p",null,"Casper Ecosystem Proposal 18 (CEP-18) is a standard interface for the CSPR and the custom made tokens. Inspired by the ERC20 standard. Read more about the CEP-18 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/casper-network/ceps/blob/master/text/0018-token-standard.md"},"here"),"."),(0,r.kt)("h4",{id:"cep-95"},"CEP-95"),(0,r.kt)("p",null,"Casper Ecosystem Proposal 95 (CEP-95) is a Casper NFT Standard. It aims to replace CEP-47 and CEP-78, which have flaws that complicate their support in the ecosystem. This standard is aligned with Ethereum's ERC-721, but makes adjustments relevant for the Casper Ecosystem. Similarly to ERC-721, this standard can be used to represent a various range of tokenized assets Read more about the CEP-95 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/casper-network/ceps/blob/master/text/0095-nft-standard.md"},"here"),"."),(0,r.kt)("h4",{id:"erc20"},"Erc20"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Erc20")," module implements the ",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-20"},"ERC20")," standard."),(0,r.kt)("h4",{id:"erc721"},"Erc721"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Erc721Base")," module implements the ",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-721"},"ERC721")," standard, adjusted for the Odra framework."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Erc721Token")," module implements the ",(0,r.kt)("inlineCode",{parentName:"p"},"ERC721Base")," and additionally uses\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"Erc721Metadata")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Ownable")," extensions."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Erc721Receiver")," trait lets you implement your own logic for receiving NFTs."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"OwnedErc721WithMetadata")," trait is a combination of ",(0,r.kt)("inlineCode",{parentName:"p"},"Erc721Token"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Erc721Metadata")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Ownable")," modules."),(0,r.kt)("h4",{id:"erc1155"},"Erc1155"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Erc1155Base")," module implements the ",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-1155"},"ERC1155")," standard, adjusted for the Odra framework."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Erc1155Token")," module implements the ",(0,r.kt)("inlineCode",{parentName:"p"},"ERC1155Base")," and additionally uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"Ownable")," extension."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"OwnedErc1155")," trait is a combination of ",(0,r.kt)("inlineCode",{parentName:"p"},"Erc1155Token")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Ownable")," modules."),(0,r.kt)("h4",{id:"wrapped-native-token"},"Wrapped native token"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"WrappedNativeToken")," module implements the Wrapper for the native token,\nit was inspired by the WETH."),(0,r.kt)("h3",{id:"access"},"Access"),(0,r.kt)("h4",{id:"accesscontrol"},"AccessControl"),(0,r.kt)("p",null,"This module enables the implementation of role-based access control mechanisms for children\nmodules. Roles are identified by their 32-bytes identifier, which should be unique and exposed in the external API."),(0,r.kt)("h4",{id:"ownable"},"Ownable"),(0,r.kt)("p",null,"This module provides a straightforward access control feature that enables exclusive access to particular functions by an account, known as the owner."),(0,r.kt)("p",null,"The account that initiates the module is automatically assigned as the owner. However, ownership can be transferred later by using the\n",(0,r.kt)("inlineCode",{parentName:"p"},"transfer_ownership()")," function."),(0,r.kt)("h4",{id:"ownable2step"},"Ownable2Step"),(0,r.kt)("p",null,"An extension of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Ownable")," module."),(0,r.kt)("p",null,"Ownership can be transferred in a two-step process by using ",(0,r.kt)("inlineCode",{parentName:"p"},"transfer_ownership()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"accept_ownership()")," functions."),(0,r.kt)("h3",{id:"security"},"Security"),(0,r.kt)("h4",{id:"pausable"},"Pausable"),(0,r.kt)("p",null,"A module allowing to implement an emergency stop mechanism that can be triggered by any account."))}u.isMDXComponent=!0}}]);