"use strict";(self.webpackChunkodra_website=self.webpackChunkodra_website||[]).push([[7537],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),d=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(r),m=a,b=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return r?n.createElement(b,i(i({ref:t},c),{},{components:r})):n.createElement(b,i({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var d=2;d<o;d++)i[d]=r[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},60380:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var n=r(87462),a=(r(67294),r(3905));const o={sidebar_position:2,description:"Files and folders in the Odra project"},i=void 0,l={unversionedId:"basics/directory-structure",id:"version-2.3.0/basics/directory-structure",title:"directory-structure",description:"Files and folders in the Odra project",source:"@site/versioned_docs/version-2.3.0/basics/02-directory-structure.md",sourceDirName:"basics",slug:"/basics/directory-structure",permalink:"/docs/2.3.0/basics/directory-structure",draft:!1,tags:[],version:"2.3.0",lastUpdatedAt:1756362595,formattedLastUpdatedAt:"Aug 28, 2025",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"Files and folders in the Odra project"},sidebar:"tutorialSidebar",previous:{title:"Cargo Odra",permalink:"/docs/2.3.0/basics/cargo-odra"},next:{title:"Odra.toml",permalink:"/docs/2.3.0/basics/odra-toml"}},s={},d=[{value:"Directory structure",id:"directory-structure",level:2},{value:"Cargo.toml",id:"cargotoml",level:3},{value:"Odra.toml",id:"odratoml",level:3},{value:"src/",id:"src",level:3},{value:"bin/",id:"bin",level:3},{value:"target/",id:"target",level:3},{value:"wasm/",id:"wasm",level:3},{value:"What&#39;s next",id:"whats-next",level:2}],c={toc:d};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"directory-structure"},"Directory structure"),(0,a.kt)("p",null,"After creating a new project using Odra and running the tests, you will be presented with the\nfollowing files and directories:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},".\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 CHANGELOG.md\n\u251c\u2500\u2500 Odra.toml\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 rust-toolchain\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 flipper.rs\n\u2502   \u2514\u2500\u2500 lib.rs\n\u251c\u2500\u2500 bin/\n|   |\u2500\u2500 build_contract.rs\n|   \u2514\u2500\u2500 build_schema.rs\n\u251c\u2500\u2500 target/\n\u2514\u2500\u2500 wasm/\n")),(0,a.kt)("h3",{id:"cargotoml"},"Cargo.toml"),(0,a.kt)("p",null,"Let's first take a look at ",(0,a.kt)("inlineCode",{parentName:"p"},"Cargo.toml")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[package]\nname = "sample"\nversion = "0.1.0"\nedition = "2021"\n\n[dependencies]\nodra = "2.2.0"\n\n[dev-dependencies]\nodra-test = "2.2.0"\n\n[build-dependencies]\nodra-build = "2.2.0"\n\n[[bin]]\nname = "sample_build_contract"\npath = "bin/build_contract.rs"\ntest = false\n\n[[bin]]\nname = "sample_build_schema"\npath = "bin/build_schema.rs"\ntest = false\n\n[profile.release]\ncodegen-units = 1\nlto = true\n\n[profile.dev.package."*"]\nopt-level = 3\n')),(0,a.kt)("p",null,"By default, your project will use the latest odra version available at crates.io. For testing purposes,\n",(0,a.kt)("inlineCode",{parentName:"p"},"odra-test")," is also added as a dev dependency."),(0,a.kt)("h3",{id:"odratoml"},"Odra.toml"),(0,a.kt)("p",null,"This is the file that holds information about contracts that will be generated when running ",(0,a.kt)("inlineCode",{parentName:"p"},"cargo odra build")," and\n",(0,a.kt)("inlineCode",{parentName:"p"},"cargo odra test"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[[contracts]]\nfqn = "sample::Flipper"\n')),(0,a.kt)("p",null,"As we can see, we have a single contract, its ",(0,a.kt)("inlineCode",{parentName:"p"},"fqn")," (Fully Qualified Name) corresponds to\nthe contract is located in ",(0,a.kt)("inlineCode",{parentName:"p"},"src/flipper.rs"),".\nMore contracts can be added here by hand, or by using ",(0,a.kt)("inlineCode",{parentName:"p"},"cargo odra generate")," command."),(0,a.kt)("h3",{id:"src"},"src/"),(0,a.kt)("p",null,"This is the folder where your smart contract files live."),(0,a.kt)("h3",{id:"bin"},"bin/"),(0,a.kt)("p",null,"This is the folder where scripts that will be used to generate code or schemas live.\nYou don't need to modify those files, they are generated by ",(0,a.kt)("inlineCode",{parentName:"p"},"cargo odra new")," command and\nare used by ",(0,a.kt)("inlineCode",{parentName:"p"},"cargo odra build"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"cargo odra test")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"cargo odra schema")," commands."),(0,a.kt)("h3",{id:"target"},"target/"),(0,a.kt)("p",null,"Files generated by cargo during the build process are put here."),(0,a.kt)("h3",{id:"wasm"},"wasm/"),(0,a.kt)("p",null,"WASM files generated by ",(0,a.kt)("inlineCode",{parentName:"p"},"cargo odra build")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"cargo odra test")," are put here. You can grab those WASM files\nand deploy them on the blockchain."),(0,a.kt)("h2",{id:"whats-next"},"What's next"),(0,a.kt)("p",null,"Now, let's take a look at one of the files mentioned above in more detail,\nnamely the ",(0,a.kt)("inlineCode",{parentName:"p"},"Odra.toml")," file."))}p.isMDXComponent=!0}}]);