"use strict";(self.webpackChunkodra_website=self.webpackChunkodra_website||[]).push([[4644],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},64837:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={sidebar_position:13,description:"How to deposit, withdraw and transfer"},s="Native token",i={unversionedId:"basics/native-token",id:"version-2.3.1/basics/native-token",title:"Native token",description:"How to deposit, withdraw and transfer",source:"@site/versioned_docs/version-2.3.1/basics/12-native-token.md",sourceDirName:"basics",slug:"/basics/native-token",permalink:"/docs/basics/native-token",draft:!1,tags:[],version:"2.3.1",lastUpdatedAt:1756365684,formattedLastUpdatedAt:"Aug 28, 2025",sidebarPosition:13,frontMatter:{sidebar_position:13,description:"How to deposit, withdraw and transfer"},sidebar:"tutorialSidebar",previous:{title:"Modules",permalink:"/docs/basics/modules"},next:{title:"Advanced",permalink:"/docs/category/advanced"}},l={},c=[{value:"Testing",id:"testing",level:2},{value:"HostEnv",id:"hostenv",level:2}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"native-token"},"Native token"),(0,a.kt)("p",null,"Different blockchains come with different implementations of their native tokens. Odra wraps it all for you\nin easy-to-use code. Let's write a simple example of a public wallet - a contract where anyone can deposit\ntheir funds and anyone can withdraw them:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust",metastring:'title="examples/src/features/native_token.rs"',title:'"examples/src/features/native_token.rs"'},"use odra::prelude::*;\nuse odra::casper_types::U512;\n\n#[odra::module]\npub struct PublicWallet;\n\n#[odra::module]\nimpl PublicWallet {\n    #[odra(payable)]\n    pub fn deposit(&mut self) {}\n\n    pub fn withdraw(&mut self, amount: &U512) {\n        self.env().transfer_tokens(&self.env().caller(), amount);\n    }\n}\n")),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"The code above works, but is dangerous and unfinished - besides allowing you to lose your funds to anyone, it doesn't make\nany checks. To keep the code simple, we skipped the part, where the contract checks if the transfer is\neven possible."),(0,a.kt)("p",{parentName:"admonition"},"To see a more reasonable example, check out ",(0,a.kt)("inlineCode",{parentName:"p"},"examples/src/contracts/tlw.rs")," in the odra main repository.")),(0,a.kt)("p",null,"You can see a new attribute used here: ",(0,a.kt)("inlineCode",{parentName:"p"},"#[odra(payable)]")," - it will add all the code needed for a function to\nbe able to receive the funds. Additionally, we are using a new function from ",(0,a.kt)("inlineCode",{parentName:"p"},"ContractEnv::transfer_tokens()"),".\nIt does exactly what you are expecting it to do - it transfers native tokens from the contract to the\nspecified address."),(0,a.kt)("h2",{id:"testing"},"Testing"),(0,a.kt)("p",null,"To be able to test how many tokens a contract (or any address) has, ",(0,a.kt)("inlineCode",{parentName:"p"},"HostEnv")," comes with a function -\n",(0,a.kt)("inlineCode",{parentName:"p"},"balance_of"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust",metastring:'title="examples/src/features/native_token.rs"',title:'"examples/src/features/native_token.rs"'},"#[cfg(test)]\nmod tests {\n    use super::PublicWallet;\n    use odra::{casper_types::U512, host::{Deployer, HostRef, NoArgs}};\n\n    #[test]\n    fn test_modules() {\n        let test_env = odra_test::env();\n        let mut my_contract = PublicWallet::deploy(&test_env, NoArgs);\n        assert_eq!(test_env.balance_of(&my_contract), U512::zero());\n\n        my_contract.with_tokens(U512::from(100)).deposit();\n        assert_eq!(test_env.balance_of(&my_contract), U512::from(100));\n\n        my_contract.withdraw(U512::from(25));\n        assert_eq!(test_env.balance_of(&my_contract), U512::from(75));\n    }\n}\n")),(0,a.kt)("h2",{id:"hostenv"},"HostEnv"),(0,a.kt)("p",null,"In a broader context of the host environment (test, livenet), you can also transfer ",(0,a.kt)("inlineCode",{parentName:"p"},"CSPR")," tokens between accounts:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust",metastring:"showLineNumbers",showLineNumbers:!0},"let env = odra_casper_livenet_env::env();\n//let env = odra_test::env();\nlet (alice, bob) = (env.get_account(0), env.get_account(1));\n\nenv.set_caller(alice);\nlet result = env.transfer_tokens(bob, odra::casper_types::U512::from(100));\n")))}d.isMDXComponent=!0}}]);