"use strict";(self.webpackChunkodra_website=self.webpackChunkodra_website||[]).push([[784],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(a),m=r,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return a?n.createElement(g,i(i({ref:t},p),{},{components:a})):n.createElement(g,i({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},33365:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));const o={sidebar_position:1,description:"A tool for managing Odra projects"},i="Cargo Odra",s={unversionedId:"basics/cargo-odra",id:"version-2.3.1/basics/cargo-odra",title:"Cargo Odra",description:"A tool for managing Odra projects",source:"@site/versioned_docs/version-2.3.1/basics/01-cargo-odra.md",sourceDirName:"basics",slug:"/basics/cargo-odra",permalink:"/docs/basics/cargo-odra",draft:!1,tags:[],version:"2.3.1",lastUpdatedAt:1756365684,formattedLastUpdatedAt:"Aug 28, 2025",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"A tool for managing Odra projects"},sidebar:"tutorialSidebar",previous:{title:"Basics",permalink:"/docs/category/basics"},next:{title:"directory-structure",permalink:"/docs/basics/directory-structure"}},l={},c=[{value:"Managing projects",id:"managing-projects",level:2},{value:"Generating code",id:"generating-code",level:2},{value:"Testing",id:"testing",level:2},{value:"Building code",id:"building-code",level:2},{value:"Skipping building",id:"skipping-building",level:2},{value:"Generating contract schema",id:"generating-contract-schema",level:2},{value:"What&#39;s next",id:"whats-next",level:2}],p={toc:c};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cargo-odra"},"Cargo Odra"),(0,r.kt)("p",null,"If you followed the ",(0,r.kt)("a",{parentName:"p",href:"/docs/getting-started/installation"},"Installation")," tutorial properly,\nyou should already be set up with the Cargo Odra tool. It is an executable that will help you with\nmanaging your smart contracts project, testing and running them with various configurations."),(0,r.kt)("p",null,"Let's take a look at all the possibilities that Cargo Odra gives you."),(0,r.kt)("h2",{id:"managing-projects"},"Managing projects"),(0,r.kt)("p",null,"Two commands help you create a new project. The first one is ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo odra new"),".\nYou need to pass one parameter, namely ",(0,r.kt)("inlineCode",{parentName:"p"},"--name {PROJECT_NAME}"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo odra new --name my-project\n")),(0,r.kt)("p",null,"This creates a new project in the ",(0,r.kt)("inlineCode",{parentName:"p"},"my_project")," folder and name it ",(0,r.kt)("inlineCode",{parentName:"p"},"my_project"),". You can see it\nfor yourself, for example by taking a look into a ",(0,r.kt)("inlineCode",{parentName:"p"},"Cargo.toml")," file created in your project's folder:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml"},'[package]\nname = "my_project"\nversion = "0.1.0"\nedition = "2021"\n')),(0,r.kt)("p",null,"The project is created using the template located in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/odradev/odra"},"Odra's main repository"),".\nBy default it uses ",(0,r.kt)("inlineCode",{parentName:"p"},"full")," template, if you want, you can use minimalistic ",(0,r.kt)("inlineCode",{parentName:"p"},"blank")," by running:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo odra new -t blank --name my-project\n")),(0,r.kt)("p",null,"The third available template is ",(0,r.kt)("inlineCode",{parentName:"p"},"workspace"),", which creates a workspace with two projects, similar to the one created\nwith the ",(0,r.kt)("inlineCode",{parentName:"p"},"full")," template."),(0,r.kt)("p",null,"There are also two templates which create a project with a sample tokens native to Casper Network: cep18 and cep78."),(0,r.kt)("p",null,"By default, the latest release of Odra will be used for the template and as a dependency.\nYou can pass a source of Odra you want to use, by using ",(0,r.kt)("inlineCode",{parentName:"p"},"-s")," parameter:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo odra new -n my-project -s ../odra # will use local folder of odra\ncargo odra new -n my-project -s release/0.9.0 # will use github branch, e.g. if you want to test new release\ncargo odra new -n my-project -s 1.1.0 # will use a version released on crates.io\n")),(0,r.kt)("p",null,"The second way of creating a project is by using ",(0,r.kt)("inlineCode",{parentName:"p"},"init")," command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo odra init --name my-project\n")),(0,r.kt)("p",null,"It works in the same way as ",(0,r.kt)("inlineCode",{parentName:"p"},"new"),", but instead of creating a new folder, it creates a project\nin the current, empty directory."),(0,r.kt)("h2",{id:"generating-code"},"Generating code"),(0,r.kt)("p",null,"If you want to quickly create a new contract code, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"generate")," command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo odra generate -c counter \n")),(0,r.kt)("p",null,"This creates a new file ",(0,r.kt)("inlineCode",{parentName:"p"},"src/counter.rs")," with sample code, add appropriate ",(0,r.kt)("inlineCode",{parentName:"p"},"use")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"mod")," sections\nto ",(0,r.kt)("inlineCode",{parentName:"p"},"src/lib.rs")," and update the ",(0,r.kt)("inlineCode",{parentName:"p"},"Odra.toml")," file accordingly. To learn more about ",(0,r.kt)("inlineCode",{parentName:"p"},"Odra.toml")," file,\nvisit ",(0,r.kt)("a",{parentName:"p",href:"/docs/basics/odra-toml"},"Odra.toml"),"."),(0,r.kt)("h2",{id:"testing"},"Testing"),(0,r.kt)("p",null,"The most used command during the development of your project should be this one:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo odra test\n")),(0,r.kt)("p",null,"It runs your tests against Odra's ",(0,r.kt)("inlineCode",{parentName:"p"},"MockVM"),". It is substantially faster than ",(0,r.kt)("inlineCode",{parentName:"p"},"CasperVM"),"\nand implements all the features Odra uses."),(0,r.kt)("p",null,'When you want to run tests against a "real" VM, just provide the name of the backend using ',(0,r.kt)("inlineCode",{parentName:"p"},"-b"),"\noption:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo odra test -b casper\n")),(0,r.kt)("p",null,"In the example above, Cargo Odra builds the project, generates the wasm files,\nspin up ",(0,r.kt)("inlineCode",{parentName:"p"},"CasperVM")," instance, deploys the contracts onto it and runs the tests against it. Pretty neat."),(0,r.kt)("p",null,"Keep in mind that this is a lot slower than ",(0,r.kt)("inlineCode",{parentName:"p"},"OdraVM")," and you cannot use the debugger.\nThis is why ",(0,r.kt)("inlineCode",{parentName:"p"},"OdraVM")," was created and should be your first choice when developing contracts.\nOf course, testing all of your code against a blockchain VM is a must in the end."),(0,r.kt)("p",null,"If you want to run only some of the tests, you can pass arguments to the ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo test")," command\n(which is run in the background obviously):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo odra test -- this-will-be-passed-to-cargo-test\n")),(0,r.kt)("p",null,"If you want to run tests which names contain the word ",(0,r.kt)("inlineCode",{parentName:"p"},"two"),", you can execute:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo odra test -- two\n")),(0,r.kt)("p",null,"Of course, you can do the same when using the backend:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo odra test -b casper -- two\n")),(0,r.kt)("h2",{id:"building-code"},"Building code"),(0,r.kt)("p",null,"You can also build the code itself and generate the output contracts without running the tests.\nTo do so, simply run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo odra build\n")),(0,r.kt)("p",null,"If the build process finishes successfully, wasm files will be located in ",(0,r.kt)("inlineCode",{parentName:"p"},"wasm")," folder.\nNotice, that this command does not require the ",(0,r.kt)("inlineCode",{parentName:"p"},"-b")," option."),(0,r.kt)("p",null,"If you want to build specific contract, you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"-c")," option:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo odra build -c counter # you pass many comma separated contracts\n")),(0,r.kt)("h2",{id:"skipping-building"},"Skipping building"),(0,r.kt)("p",null,"As building wasm files can take a long time, especially if you have a lot of contracts. If you did not change anything\nin your contracts and you just want to rerun the tests for the casper backend, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"-s")," option:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo odra test -b casper -s\n")),(0,r.kt)("h2",{id:"generating-contract-schema"},"Generating contract schema"),(0,r.kt)("p",null,"If you want to generate a schema (including the name, entrypoints, events, etc.) for your contract, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"schema")," command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo odra schema \n")),(0,r.kt)("p",null,"This generates a schema file in JSON format for all your contracts and places them in the ",(0,r.kt)("inlineCode",{parentName:"p"},"resources")," folder.\nIf the ",(0,r.kt)("inlineCode",{parentName:"p"},"resources")," folder does not exist, it creates the folder for you."),(0,r.kt)("p",null,"Like with the ",(0,r.kt)("inlineCode",{parentName:"p"},"build")," command, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"-c")," option to generate a schema for a specific contract."),(0,r.kt)("h2",{id:"whats-next"},"What's next"),(0,r.kt)("p",null,"In the next section, we will take a look at all the files and directories that ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo odra")," created\nfor us and explain their purpose."))}d.isMDXComponent=!0}}]);